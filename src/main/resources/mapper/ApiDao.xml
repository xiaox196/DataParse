<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ming.data.dao.ApiDao">
  <resultMap id="BaseResultMap" type="com.ming.data.entity.Api">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="method" jdbcType="VARCHAR" property="method" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="params" jdbcType="VARCHAR" property="params" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIME" property="createTime" />
    <result column="creater" jdbcType="VARCHAR" property="creater" />
    <result column="project" jdbcType="VARCHAR" property="project" />
    <result column="root" jdbcType="VARCHAR" property="root" />
    <result column="port" jdbcType="INTEGER" property="port" />
    <result column="groups" jdbcType="INTEGER" property="groups" />
  </resultMap>
  <sql id="Base_Column_List">
    id, `name`, `method`, `path`, params, remark, create_time, creater, project, root, 
    port, groups
  </sql>
  <select id="selectByPath" parameterType="string" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from api
    where path = #{path}
  </select>

  <select id="findAll" parameterType="string" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from api
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from api
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByGroupId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from api
    where  groups= #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from api
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.ming.data.entity.Api" useGeneratedKeys="true">
    insert into api (`name`, `method`, `path`, 
      params, remark, create_time, 
      creater, project, root, 
      port, groups)
    values (#{name,jdbcType=VARCHAR}, #{method,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, 
      #{params,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIME}, 
      #{creater,jdbcType=VARCHAR}, #{project,jdbcType=VARCHAR}, #{root,jdbcType=VARCHAR}, 
      #{port,jdbcType=INTEGER}, #{groups,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.ming.data.entity.Api" useGeneratedKeys="true">
    insert into api
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="method != null">
        `method`,
      </if>
      <if test="path != null">
        `path`,
      </if>
      <if test="params != null">
        params,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="creater != null">
        creater,
      </if>
      <if test="project != null">
        project,
      </if>
      <if test="root != null">
        root,
      </if>
      <if test="port != null">
        port,
      </if>
      <if test="groups != null">
        groups,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="params != null">
        #{params,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIME},
      </if>
      <if test="creater != null">
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="project != null">
        #{project,jdbcType=VARCHAR},
      </if>
      <if test="root != null">
        #{root,jdbcType=VARCHAR},
      </if>
      <if test="port != null">
        #{port,jdbcType=INTEGER},
      </if>
      <if test="groups != null">
        #{groups,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ming.data.entity.Api">
    update api
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        `method` = #{method,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        `path` = #{path,jdbcType=VARCHAR},
      </if>
      <if test="params != null">
        params = #{params,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIME},
      </if>
      <if test="creater != null">
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="project != null">
        project = #{project,jdbcType=VARCHAR},
      </if>
      <if test="root != null">
        root = #{root,jdbcType=VARCHAR},
      </if>
      <if test="port != null">
        port = #{port,jdbcType=INTEGER},
      </if>
      <if test="groups != null">
        groups = #{groups,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ming.data.entity.Api">
    update api
    set `name` = #{name,jdbcType=VARCHAR},
      `method` = #{method,jdbcType=VARCHAR},
      `path` = #{path,jdbcType=VARCHAR},
      params = #{params,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIME},
      creater = #{creater,jdbcType=VARCHAR},
      project = #{project,jdbcType=VARCHAR},
      root = #{root,jdbcType=VARCHAR},
      port = #{port,jdbcType=INTEGER},
      groups = #{groups,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>